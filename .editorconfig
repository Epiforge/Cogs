root = true


[*]

charset = utf-8
end_of_line = crlf
indent_size = 4
indent_style = space
insert_final_newline = false
trim_trailing_whitespace = true


[*.{cs,vb}]

csharp_indent_case_contents = true
csharp_indent_labels = flush_left
csharp_indent_switch_labels = true

csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

csharp_prefer_braces = false:warning

csharp_prefer_simple_default_expression = true:warning

csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, partial, override, readonly, unsafe, volatile, async:warning

csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = false

csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_around_binary_operators = true
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false

csharp_style_conditional_delegate_call = true:warning

csharp_style_deconstructed_variable_declaration = true:warning

csharp_style_expression_bodied_accessors = when_on_single_line:warning
csharp_style_expression_bodied_constructors = when_on_single_line:warning
csharp_style_expression_bodied_indexers = when_on_single_line:warning
csharp_style_expression_bodied_methods = when_on_single_line:warning
csharp_style_expression_bodied_operators = when_on_single_line:warning
csharp_style_expression_bodied_properties = when_on_single_line:warning

csharp_style_inlined_variable_declaration = true:warning

csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning

csharp_style_throw_expression = true:warning

csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning

dotnet_sort_system_directives_first = false

dotnet_style_coalesce_expression = true:warning

dotnet_style_collection_initializer = true:warning

dotnet_style_explicit_tuple_names = true:warning

dotnet_style_null_propagation = true:warning

dotnet_style_object_initializer = true:warning

# prefer language keywords to BCL types (e.g. int over Int32)
dotnet_style_predefined_type_for_member_access = true:warning
dotnet_style_predefined_type_for_locals_parameters_members = true:warning

dotnet_style_prefer_auto_properties = true:warning

dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning

dotnet_style_prefer_inferred_tuple_names = true:warning

dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning

# avoid using "this."
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# fields should be marked with readonly (C#) or ReadOnly (Visual Basic) if they are only ever assigned inline, or inside of a constructor
dotnet_style_readonly_field = true:warning

# avoid unnecessary accessibility modifiers (e.g. specifying private)
dotnet_style_require_accessibility_modifiers = never:warning

visual_basic_preferred_modifier_order = Default, Private, Protected, Public, Friend, NotOverridable, Overridable, MustOverride, Overloads, Overrides, MustInherit, NotInheritable, Partial, Static, Shared, Shadows, ReadOnly, WriteOnly, Dim, Const, WithEvents, Widening, Narrowing, Custom, Async:warning


dotnet_naming_style.camel_case.capitalization = camel_case
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_symbols.non_public_field.applicable_kinds = field
dotnet_naming_symbols.non_public_field.applicable_accessibilities = private, protected, protected_internal, protected_friend

dotnet_naming_symbols.non_public_non_field_member.applicable_kinds = property, method, event
dotnet_naming_symbols.non_public_non_field_member.applicable_accessibilities = private, protected, protected_internal, protected_friend

dotnet_naming_symbols.non_public_type.applicable_kinds = class, struct, interface, enum, delegate
dotnet_naming_symbols.non_public_type.applicable_accessibilities = private, protected, protected_internal, protected_friend

dotnet_naming_symbols.parameter.applicable_kinds = parameter

dotnet_naming_symbols.public.applicable_kinds = *
dotnet_naming_symbols.public.applicable_accessibilities = public, internal, friend

dotnet_naming_rule.non_public_field_must_be_camel_case.symbols = non_public_field
dotnet_naming_rule.non_public_field_must_be_camel_case.style = camel_case
dotnet_naming_rule.non_public_field_must_be_camel_case.severity = warning

dotnet_naming_rule.non_public_non_field_member_must_be_pascal_case.symbols = non_public_non_field_member
dotnet_naming_rule.non_public_non_field_member_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_public_non_field_member_must_be_pascal_case.severity = warning

dotnet_naming_rule.non_public_type_must_be_pascal_case.symbols = non_public_type
dotnet_naming_rule.non_public_type_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.non_public_type_must_be_pascal_case.severity = warning

dotnet_naming_rule.parameter_must_be_camel_case.symbols = parameter
dotnet_naming_rule.parameter_must_be_camel_case.style = camel_case
dotnet_naming_rule.parameter_must_be_camel_case.severity = warning

dotnet_naming_rule.public_must_be_pascal_case.symbols = public
dotnet_naming_rule.public_must_be_pascal_case.style = pascal_case
dotnet_naming_rule.public_must_be_pascal_case.severity = warning